{"name": "test_multiple_login_attempts[firefox]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:202:5\nNoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:555:5\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16", "trace": "driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"ffa4a2d0-0140-4550-97d0-4f13cc98b271\")>\n\n    @pytest.mark.login\n    def test_multiple_login_attempts(driver):\n        \"\"\"Verify multiple login attempts work properly\"\"\"\n        login = LoginPage(driver)\n        login.open(BASE_URL)\n        login.click_customer_login()\n        users = [\"Harry Potter\", \"Ron Weasly\", \"Hermoine Granger\"]\n    \n        for user in users:\n            try:\n                login.select_user(user)\n                login.click_login()\n            except (StaleElementReferenceException, TimeoutException):\n                driver.refresh()\n                login.click_customer_login()\n                login.select_user(user)\n                login.click_login()\n    \n            logout_btn = (By.CSS_SELECTOR, \"button[ng-click='byebye()']\")\n            WebDriverWait(driver, 15).until(EC.element_to_be_clickable(logout_btn)).click()\n>           WebDriverWait(driver, 15).until(EC.visibility_of_element_located((By.XPATH, \"//button[contains(text(),'Customer Login')]\")))\n\ntests\\test_login.py:285: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ffa4a2d0-0140-4550-97d0-4f13cc98b271\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x0000020ACF5E8040>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:202:5\nE       NoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:555:5\nE       dom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "description": "Verify multiple login attempts work properly", "parameters": [{"name": "browser_name", "value": "'firefox'"}], "start": 1761203757883, "stop": 1761203797971, "uuid": "e96665d5-8c23-4262-be76-edd497707f14", "historyId": "bb234bdbc5f6d3277ca1a827f275482d", "testCaseId": "62a23fdf31f5be44d2ad1b95cfca441a", "fullName": "tests.test_login#test_multiple_login_attempts", "labels": [{"name": "tag", "value": "login"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "ASCENDI-L5N0U9N"}, {"name": "thread", "value": "5188-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}], "titlePath": ["tests", "test_login.py"]}